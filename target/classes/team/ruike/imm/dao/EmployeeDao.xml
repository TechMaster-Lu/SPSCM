<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >

<mapper namespace="team.ruike.imm.dao.EmployeeDao">
    <resultMap id="employeeMap" type="employee">
        <result column="employee_id" property="employeeId" />
        <result column="employee_name" property="employeeName" />
        <result column="employee_id_number" property="employeeIdNumber" />
        <result column="employee_mobile_phone" property="employeeMobilePhone" />
        <result column="employee_email" property="employeeEmail" />
        <result column="employee_address" property="employeeAddress" />
        <result column="employee_state" property="employeeState" />
        <result column="position_id" property="positionId" />
        <collection property="position" ofType="position">
            <result property="positionId" column="position_id" />
            <result property="positionName" column="position_name" />
            <result property="positionState" column="position_state" />
        </collection>
    </resultMap>
    <select id="selectEmployee" resultMap="employeeMap">
        select * from employee e,position p
        <where>
            e.position_id=p.position_id
            <if test="employeeId!=null and employeeId>0">
                and e.employee_id=#{employeeId}
            </if>
            <if test="employeeName!=null and employeeName!=''">
                and e.employee_name=#{employeeName}
            </if>
            <if test="positionId!=null and positionId>0">
                and e.position_id=#{positionId}
            </if>
            <if test="employeeIdNumber!=null and employeeIdNumber!=''">
                and e.employee_id_number=#{employeeIdNumber}
            </if>
            <if test="employeeMobilePhone!=null and employeeMobilePhone!=''">
                and e.employee_mobile_phone=#{employeeMobilePhone}
            </if>
            <if test="employeeEmail!=null and employeeEmail!=''">
                and e.employee_email=#{employeeEmail}
            </if>
            <if test="employeeAddress!=null and employeeAddress!=''">
                and e.employee_address=#{employeeAddress}
            </if>
            <if test="employeeState!=null">
                and e.employee_state=#{employeeState}
            </if>
        </where>
        <if test="currentPage!=null and pageSize!=null">
            LIMIT #{currentPage},#{pageSize}
        </if>
    </select>
    <update id="updateEmployee" parameterType="employee">
        update employee
        <set>
            <if test="employeeId!=null and employeeId>0">
                employee_id=#{employeeId},
            </if>
            <if test="employeeName!=null and employeeName!=''">
                employee_name=#{employeeName},
            </if>
            <if test="positionId!=null and positionId>0">
                position_id=#{positionId},
            </if>
            <if test="employeeIdNumber!=null and employeeIdNumber!=''">
                employee_id_number=#{employeeIdNumber},
            </if>
            <if test="employeeMobilePhone!=null and employeeMobilePhone!=''">
                employee_mobile_phone=#{employeeMobilePhone},
            </if>
            <if test="employeeEmail!=null and employeeEmail!=''">
                employee_email=#{employeeEmail},
            </if>
            <if test="employeeAddress!=null and employeeAddress!=''">
                employee_address=#{employeeAddress},
            </if>
            <if test="employeeState!=null">
                employee_state=#{employeeState},
            </if>
        </set>
                where employee_id=#{employeeId}
    </update>
    <insert id="insertEmployee" parameterType="employee">
        insert into employee (employee_name,position_id,employee_id_number,employee_mobile_phone,employee_email,employee_address,employee_state)
        values (#{employeeName},#{positionId},#{employeeIdNumber},#{employeeMobilePhone},#{employeeEmail},#{employeeAddress},#{employeeState});
    </insert>

    <select id="count" resultType="int"  parameterType="employee">
        select count(*) from employee
        <where>
            <if test="employeeName!=null and  employeeName!=''">
                concat(employee_name,
                '!,(%!)#',employee_id_number,
                '*!,(%!)#',employee_mobile_phone,
                '*!,(%!)#',employee_email,
                '*!,(%!)#',employee_address
                )
                like CONCAT('%',#{employeeName},'%')
            </if>
            <if test="employeeState!=null">
                and employee_state=#{employeeState}
            </if>
        </where>
    </select>

    <select id="pages" resultMap="employeeMap">
        select * from employee e,position p
        <where>
            e.position_id=p.position_id
            <if test="employeeName!=null and  employeeName!=''">
                and  concat(e.employee_name,
                '!,(%!)#',e.employee_id_number,
                '*!,(%!)#',e.employee_mobile_phone,
                '*!,(%!)#',e.employee_email,
                '*!,(%!)#',e.employee_address
                )
                like CONCAT('%',#{employeeName},'%')
            </if>

            <if test="employeeState!=null">
                and e.employee_state=#{employeeState}
            </if>
            <if test="currentPage!=null and pageSize!=null">
                LIMIT #{currentPage},#{pageSize}
            </if>
        </where>
    </select>

    <!--修改为离职员工-->
    <update id="noncooperation" parameterType="java.util.List">
        <foreach collection="list" item="client" index="index" open="" close="" separator=";" >
            update employee
            <set>
                employee_state=1
            </set>
            where employee_id=#{client.employeeId}
        </foreach>
    </update>
    <!--修改为在职与昂工-->
    <update id="cooperative" parameterType="java.util.List">
        <foreach collection="list" item="client" index="index" open="" close="" separator=";" >
            update employee
            <set>
                employee_state=0
            </set>
            where employee_id=#{client.employeeId}
        </foreach>
    </update>
</mapper>